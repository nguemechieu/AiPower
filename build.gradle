plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.sopotek'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springAiVersion', "1.0.0-M3")
    set('springBootAdminVersion', "3.3.4")
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security

    // JSON Web Token (JWT) for token generation
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Database drivers and utilities
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'com.h2database:h2' // For in-memory H2 database

    // Serialization, XML, and OpenAPI
    implementation 'org.glassfish.jaxb:jaxb-jxc:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.13.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.2.0'

    // Environment variable handling
    implementation 'io.github.cdimascio:dotenv-java:2.2.2'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    // Servlet API
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    // Spring Boot Admin - Only Server dependency
    implementation 'de.codecentric:spring-boot-admin-starter-server'

    // Additional libraries and bot support
    implementation 'org.telegram:telegrambots-spring-boot-starter:6.3.0'
    implementation 'org.jetbrains:annotations:19.0.0'

    // Lombok and annotation processing
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
